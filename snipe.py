import os
import threading
import discord
from discord.ext import commands
from flask import Flask
import yfinance as yf
from alpha_vantage.timeseries import TimeSeries
import datetime

app = Flask(__name__)

@app.route('/')
def home():
    return "Discord Bot is running!"

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Bot
intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix='!', intents=intents)

# API Keys - ‡πÉ‡∏™‡πà‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏≠‡∏á
ALPHA_VANTAGE_API_KEY = os.getenv("API_KEY") # ‡∏à‡∏≤‡∏Å alphavantage.co
DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")  # ‡∏à‡∏≤‡∏Å Discord Developer Portal

@bot.event
async def on_ready():
    print(f'{bot.user} has landed and is ready to snipe stocks!')

@bot.command(name='snipe')
async def snipe_stock(ctx, symbol: str):
    symbol = symbol.upper()
    embed = discord.Embed(title=f"üìà ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏∏‡πâ‡∏ô {symbol}", color=0x00ff00)
    embed.set_thumbnail(url=f"https://finance.yahoo.com/quote/{symbol}/profile?p={symbol}")
    
    try:
        # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å yfinance
        ticker = yf.Ticker(symbol)
        info = ticker.info
        hist = ticker.history(period="1d")
        
        if not info or info.get('symbol') != symbol:
            embed.description = f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏∏‡πâ‡∏ô {symbol} ‡∏•‡∏≠‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠ ticker ‡πÉ‡∏´‡∏°‡πà!"
            await ctx.send(embed=embed)
            return
        
        # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó
        company_name = info.get('longName', 'N/A')
        exchange = info.get('exchange', 'N/A')
        embed.description = f"{company_name} ({exchange})"
        
        # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß
        current_price = info.get('currentPrice', 'N/A')
        previous_close = info.get('previousClose', 'N/A')
        open_price = info.get('open', 'N/A')
        day_high = info.get('dayHigh', 'N/A')
        day_low = info.get('dayLow', 'N/A')
        
        change = current_price - previous_close if current_price != 'N/A' and previous_close != 'N/A' else 0
        change_percent = (change / previous_close * 100) if previous_close != 'N/A' and previous_close != 0 else 0
        
        price_field = (
            f"‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: ${current_price:.4f}\n"
            f"‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á: {change:+.4f} ({change_percent:+.4f}%)\n"
            f"‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏õ‡∏¥‡∏î: ${open_price:.4f}\n"
            f"‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ: ${day_high:.4f}\n"
            f"‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ: ${day_low:.4f}"
        )
        embed.add_field(name="üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß", value=price_field, inline=False)
        
        # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≤‡∏¢
        volume = hist['Volume'].iloc[-1] if not hist.empty else 'N/A'
        try:
            ts = TimeSeries(key=ALPHA_VANTAGE_API_KEY, output_format='pandas')
            quote_data, _ = ts.get_quote_endpoint(symbol=symbol)
            av_volume = quote_data['05. volume'].iloc[0] if not quote_data.empty else volume
            volume = av_volume if av_volume != 'N/A' else volume
        except Exception:
            pass
        
        trading_field = (
            f"‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≤‡∏¢: {volume:,}\n"
            f"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: {datetime.datetime.now().strftime('%Y-%m-%d')}\n"
            f"‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏¥‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤: ${previous_close:.4f}"
        )
        embed.add_field(name="üìä ‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≤‡∏¢", value=trading_field, inline=False)
        
        # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó
        industry = info.get('industry', 'N/A')
        market_cap = info.get('marketCap', 'N/A')
        market_cap = f"${market_cap:,.0f}" if market_cap != 'N/A' else 'N/A'
        pe_ratio = info.get('trailingPE', 'None')
        eps = info.get('trailingEps', 'N/A')
        dividend_yield = info.get('dividendYield', 'None')
        dividend_yield = f"{dividend_yield * 100:.2f}%" if dividend_yield != 'None' else 'None'
        
        company_field = (
            f"‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏°: {industry}\n"
            f"‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏ï‡∏•‡∏≤‡∏î: {market_cap}\n"
            f"P/E Ratio: {pe_ratio if pe_ratio != 'None' else 'None'}\n"
            f"EPS: ${eps:.2f}\n"
            f"Dividend Yield: {dividend_yield}"
        )
        embed.add_field(name="üè¢ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó", value=company_field, inline=False)
        
        # ‡∏ä‡πà‡∏ß‡∏á 52 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
        week52_high = info.get('fiftyTwoWeekHigh', 'N/A')
        week52_low = info.get('fiftyTwoWeekLow', 'N/A')
        week52_field = (
            f"‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 52 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå: ${week52_high:.2f}\n"
            f"‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î 52 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå: ${week52_low:.2f}"
        )
        embed.add_field(name="üìÖ ‡∏ä‡πà‡∏ß‡∏á 52 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå", value=week52_field, inline=False)
        
        # ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÄ‡∏õ‡πâ‡∏≤‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå
        rating = info.get('recommendationMean', 'N/A')
        rating_text = "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥"
        if rating != 'N/A':
            rating_value = float(rating)
            if rating_value <= 2.0:
                rating_text = "‡∏ã‡∏∑‡πâ‡∏≠"
            elif rating_value <= 3.5:
                rating_text = "‡∏ñ‡∏∑‡∏≠"
            else:
                rating_text = "‡∏Ç‡∏≤‡∏¢"
        try:
            targets = ticker.analyst_price_targets
            if targets and targets.get('mean', 'N/A') != 'N/A':
                mean_target = targets.get('mean', 'N/A')
                low_target = targets.get('low', 'N/A')
                high_target = targets.get('high', 'N/A')
                analyst_field = (
                    f"‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°: {rating_text} (‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: {rating:.1f}/5.0)\n"
                    f"‡πÄ‡∏õ‡πâ‡∏≤‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: ${mean_target:.3f}\n"
                    f"‡πÄ‡∏õ‡πâ‡∏≤‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î: ${low_target:.3f}\n"
                    f"‡πÄ‡∏õ‡πâ‡∏≤‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î: ${high_target:.3f}"
                )
            else:
                analyst_field = (
                    f"‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°: {rating_text} (‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: {rating if rating != 'N/A' else 'N/A'}/5.0)\n"
                    f"‡πÄ‡∏õ‡πâ‡∏≤‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•\n"
                    f"‡πÄ‡∏õ‡πâ‡∏≤‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î: ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•\n"
                    f"‡πÄ‡∏õ‡πâ‡∏≤‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î: ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"
                )
        except Exception:
            analyst_field = (
                f"‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°: {rating_text} (‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: {rating if rating != 'N/A' else 'N/A'}/5.0)\n"
                f"‡πÄ‡∏õ‡πâ‡∏≤‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ\n"
                f"‡πÄ‡∏õ‡πâ‡∏≤‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ\n"
                f"‡πÄ‡∏õ‡πâ‡∏≤‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ"
            )
        embed.add_field(name="üîÆ ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÄ‡∏õ‡πâ‡∏≤‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏∏‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå", value=analyst_field, inline=False)
        
        # Footer
        embed.set_footer(text=f"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Yahoo Finance & Alpha Vantage | ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: {datetime.datetime.now().strftime('%Y-%m-%d %H:%M UTC')}")
        
        await ctx.send(embed=embed)
        
    except Exception as e:
        embed.description = f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}\n‡∏•‡∏≠‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏∏‡πâ‡∏ô‡∏´‡∏£‡∏∑‡∏≠ API key ‡πÉ‡∏´‡∏°‡πà!"
        await ctx.send(embed=embed)

def run_flask():
    app.run(host='0.0.0.0', port=int(os.getenv("PORT", 10000)))

# ‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó
if __name__ == "__main__":
    flask_thread = threading.Thread(target=run_flask)
    flask_thread.start()
    bot.run(DISCORD_TOKEN)